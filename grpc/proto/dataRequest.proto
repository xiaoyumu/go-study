/*
Run following command in the folder of file dataRequest.proto in
to generate the pb.go code file.

$ protoc dataRequest.proto --go_out=plugins=grpc:.
*/
syntax = "proto3";

package proto;

/*
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
*/

option java_multiple_files = true;
option java_package = "fish.grpc.rda";
option java_outer_classname = "RemoteDBServiceProto";

service RemoteDBService{
    rpc ExecuteNoneQuery(DBRequest) returns (DBResponse) {}
    rpc ExecuteScalar(DBRequest) returns (DBResponse) {}
    rpc ExecuteDataSet(DBRequest) returns (DBResponse) {}
}

message DBRequest {
    // Token will be used to identify the server connection info    
    string token = 1;
    // Or the server connection info was given in the DbRequest
    ServerInfo serverInfo = 2;

    // The script name to locate a DB script for execution
    string script = 3;

    // The plain text sql statement
    string sqlStatement = 4;

    // Parameter list
    repeated DBParameter parameters = 5;
}

message DBParameter{
    string name = 1;
    string dbType = 2;
    int64 dbLength = 3;
    // golang type
    string type = 4;
    bytes value = 5;
}

message ServerInfo {
    string server = 1;
    int32 port = 2;
    string database = 3;
    string userId = 4;
    string password = 5;
}

message DBResponse {
    bool succeeded = 1;
    string message = 2;

    // For execute scalar operation
    DBScalarValue scalarValue = 3;

    // For execute none query operation
    int64 rowEffected = 4;

    // For execute execute dataset operation
    DataSet dataset = 5;
}

message DataSet {
    repeated DataTable tables = 1; // Table list
}

message DataTable {
    string name = 1;

    // Column definitions of this table
    repeated DataColumn columns = 2;

    // Rows in this table
    repeated DataRow rows = 3;
}

message DataColumn {
    // Zero based column index in the DB record set
    int32 index = 1;

    // The name of the column
    string name = 2;

    // The db type of the column    
    string dbType = 3;

    // The db size
    int64 length = 4;

    // golang type
    string type = 5;
  
    // For decimal numeric type
    int64 precision = 6;
    int64 scale = 7;

    // Indicate if the column is nullable
    bool nullable = 8;
}

message DataRow {    
    repeated DBValue values = 1; 
}

message DBValue{
    int32 index = 1;
    bytes value = 2;
    //google.protobuf.Any value = 2;
}

message DBScalarValue{
    // The value
    bytes value = 1;

    // The db type of the column    
    string dbType = 2;

    // The db size
    int64 length = 3;

    // golang type
    string type = 4;
  
    // For decimal numeric type
    int64 precision = 5;
    int64 scale = 6;    
}